<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>transaction on Principia</title><link>/tags/transaction/</link><description>Recent content in transaction on Principia</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 13 Aug 2017 00:00:00 +0000</lastBuildDate><atom:link href="/tags/transaction/index.xml" rel="self" type="application/rss+xml"/><item><title>Distributed Transactions</title><link>/docs/transaction/</link><pubDate>Sun, 13 Aug 2017 00:00:00 +0000</pubDate><guid>/docs/transaction/</guid><description>Occult (Observable causal consistency using lossy timestamps) # Observable causal consistency definition:
Alice write(a=1) -&amp;gt; |Shard A| --x--&amp;gt; |Shard A&amp;#39;| Bob read(a)=1 &amp;lt;- |Shard A| write(b=2) -&amp;gt; |Shard B| -----&amp;gt; |Shard B&amp;#39;| -&amp;gt; read(b) waits for read(a) All existing causally consistent systems are susceptible to slowdown cascades.
Solution: timestamp like vector clocks Write path: Client library attaches its causal timestamp to every write and sends it to the master of the corresponding shard.</description></item></channel></rss>